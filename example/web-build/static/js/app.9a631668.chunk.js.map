{"version":3,"sources":["webpack:///./App.js?484d"],"names":["App","useState","rerender","setRerender","redView","style","backgroundColor","height","width","greenView","blueView","layouts","validAfterWHRatio","validBeforeWHRatio","views","top","bottom","left","right","children","defaultFlag","useEffect"],"mappings":"oLAKe,SAASA,IACvB,MAAgCC,mBAAS,GAAzC,WAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAU,cAAC,IAAD,CAAMC,MAAO,CAAEC,gBAAiB,MAAOC,OAAQ,OAAQC,MAAO,QAA9D,SAAyE,cAAC,IAAD,UAAO,wBAC1FC,EAAY,cAAC,IAAD,CAAMJ,MAAO,CAAEC,gBAAiB,QAASC,OAAQ,OAAQC,MAAO,QAAhE,SAA2E,cAAC,IAAD,UAAO,0BAC9FE,EAAW,cAAC,IAAD,CAAML,MAAO,CAAEC,gBAAiB,OAAQC,OAAQ,OAAQC,MAAO,QAA/D,SAA0E,cAAC,IAAD,UAAO,yBAC5FG,EAAU,CACf,CACCC,kBAAmB,EACnBC,mBAAoB,GACpBC,MAAO,CACN,CAAEC,IAAK,EAAGC,OAAQ,GAAKC,KAAM,EAAGC,MAAO,EAAGC,SAAUf,GACpD,CAAEW,IAAK,GAAKC,OAAQ,IAAMC,KAAM,EAAGC,MAAO,EAAGC,SAAUV,GACvD,CAAEM,IAAK,IAAMC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,SAAUT,KAGvD,CACCE,kBAAmB,EAAI,IACvBC,mBAAoB,IACpBC,MAAO,CACN,CAAEC,IAAK,EAAGC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,GAAKC,SAAUf,GACpD,CAAEW,IAAK,EAAGC,OAAQ,GAAKC,KAAM,GAAKC,MAAO,EAAGC,SAAUV,GACtD,CAAEM,IAAK,GAAKC,OAAQ,EAAGC,KAAM,GAAKC,MAAO,EAAGC,SAAUT,KAGxD,CACCU,aAAa,EACbN,MAAO,CACN,CAAEC,IAAK,IAAMC,OAAQ,IAAMC,KAAM,IAAMC,MAAO,GAAKC,SAAUf,GAC7D,CAAEW,IAAK,IAAMC,OAAQ,GAAMC,KAAM,GAAKC,MAAO,IAAMC,SAAUV,GAC7D,CAAEM,IAAK,GAAMC,OAAQ,IAAMC,KAAM,GAAKC,MAAO,IAAMC,SAAUT,MAUhE,OALAW,qBAAU,WAETlB,EADmBD,EAAW,KAE5B,IAEI,cAAC,IAAD,CACNS,QAASA,EACTT,SAAUA,M","file":"static/js/app.9a631668.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View } from 'react-native';\nimport ReactNativeAnimatedLayout from 'react-native-animated-layout';\n\n\nexport default function App() {\n\tconst [rerender, setRerender] = useState(0);\n\tconst redView = <View style={{ backgroundColor: 'red', height: '100%', width: '100%', }}><Text>{\"I am the red view\"}</Text></View>;\n\tconst greenView = <View style={{ backgroundColor: 'green', height: '100%', width: '100%', }}><Text>{\"I am the green view\"}</Text></View>;\n\tconst blueView = <View style={{ backgroundColor: 'blue', height: '100%', width: '100%', }}><Text>{\"I am the blue view\"}</Text></View>;\n\tconst layouts = [\n\t\t{\n\t\t\tvalidAfterWHRatio: 0,\n\t\t\tvalidBeforeWHRatio: 0.9,\n\t\t\tviews: [\n\t\t\t\t{ top: 0, bottom: 0.5, left: 0, right: 1, children: redView },\n\t\t\t\t{ top: 0.5, bottom: 0.75, left: 0, right: 1, children: greenView },\n\t\t\t\t{ top: 0.75, bottom: 1, left: 0, right: 1, children: blueView },\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tvalidAfterWHRatio: 1 / 0.62,\n\t\t\tvalidBeforeWHRatio: 999, // infinity\n\t\t\tviews: [\n\t\t\t\t{ top: 0, bottom: 1, left: 0, right: 0.5, children: redView },\n\t\t\t\t{ top: 0, bottom: 0.5, left: 0.5, right: 1, children: greenView },\n\t\t\t\t{ top: 0.5, bottom: 1, left: 0.5, right: 1, children: blueView },\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tdefaultFlag: true,\n\t\t\tviews: [\n\t\t\t\t{ top: 0.16, bottom: 0.84, left: 0.16, right: 0.5, children: redView },\n\t\t\t\t{ top: 0.16, bottom: 0.50, left: 0.5, right: 0.84, children: greenView },\n\t\t\t\t{ top: 0.50, bottom: 0.84, left: 0.5, right: 0.84, children: blueView },\n\t\t\t]\n\t\t},\n\t];\n\n\tuseEffect(() => {\n\t\tlet nextRerender = rerender + 1;\n\t\tsetRerender(nextRerender);\n\t}, []); // when we want to re-render\n\n\treturn <ReactNativeAnimatedLayout\n\t\tlayouts={layouts}\n\t\trerender={rerender}\n\t/>;\n}\n"],"sourceRoot":""}