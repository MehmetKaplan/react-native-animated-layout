{"version":3,"sources":["webpack:///./App.js?484d"],"names":["App","useState","rerender","setRerender","redView","style","backgroundColor","height","width","greenView","overflow","blueView","layouts","validAfterWHRatio","validBeforeWHRatio","views","top","bottom","left","right","children","defaultFlag","useEffect"],"mappings":"oLAKe,SAASA,IACvB,MAAgCC,mBAAS,GAAzC,WAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAU,cAAC,IAAD,CAAMC,MAAO,CAAEC,gBAAiB,MAAOC,OAAQ,OAAQC,MAAO,QAA9D,SAAyE,cAAC,IAAD,UAAO,wBAC1FC,EAAY,eAAC,IAAD,CAAMJ,MAAO,CAAEC,gBAAiB,QAASC,OAAQ,OAAQC,MAAO,OAAQE,SAAU,UAAlF,UACjB,cAAC,IAAD,UAAO,kHAAuH,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,MAAW,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,OAAY,cAAC,IAAD,UAAO,UAE7pBC,EAAW,cAAC,IAAD,CAAMN,MAAO,CAAEC,gBAAiB,OAAQC,OAAQ,OAAQC,MAAO,QAA/D,SAA0E,cAAC,IAAD,UAAO,yBAC5FI,EAAU,CACf,CACCC,kBAAmB,EACnBC,mBAAoB,GACpBC,MAAO,CACN,CAAEC,IAAK,EAAGC,OAAQ,GAAKC,KAAM,EAAGC,MAAO,EAAGC,SAAUhB,GACpD,CAAEY,IAAK,IAAMC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,SAAUT,GACrD,CAAEK,IAAK,GAAKC,OAAQ,IAAMC,KAAM,EAAGC,MAAO,EAAGC,SAAUX,KAGzD,CACCI,kBAAmB,EAAI,IACvBC,mBAAoB,IACpBC,MAAO,CACN,CAAEC,IAAK,EAAGC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,GAAKC,SAAUhB,GACpD,CAAEY,IAAK,GAAKC,OAAQ,EAAGC,KAAM,GAAKC,MAAO,EAAGC,SAAUT,GACtD,CAAEK,IAAK,EAAGC,OAAQ,GAAKC,KAAM,GAAKC,MAAO,EAAGC,SAAUX,KAGxD,CACCY,aAAa,EACbN,MAAO,CACN,CAAEC,IAAK,IAAMC,OAAQ,IAAMC,KAAM,IAAMC,MAAO,GAAKC,SAAUhB,GAC7D,CAAEY,IAAK,GAAMC,OAAQ,IAAMC,KAAM,GAAKC,MAAO,IAAMC,SAAUT,GAC7D,CAAEK,IAAK,IAAMC,OAAQ,GAAMC,KAAM,GAAKC,MAAO,IAAMC,SAAUX,MAUhE,OALAa,qBAAU,WAETnB,EADmBD,EAAW,KAE5B,IAEI,cAAC,IAAD,CACNU,QAASA,EACTV,SAAUA,M","file":"static/js/app.dbd42baf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View } from 'react-native';\nimport ReactNativeAnimatedLayout from 'react-native-animated-layout';\n\n\nexport default function App() {\n\tconst [rerender, setRerender] = useState(0);\n\tconst redView = <View style={{ backgroundColor: 'red', height: '100%', width: '100%', }}><Text>{\"I am the red view\"}</Text></View>;\n\tconst greenView = <View style={{ backgroundColor: 'green', height: '100%', width: '100%', overflow: 'hidden'}}>\n\t\t<Text>{\"I am the green view and my contents overflow. Because of the overflow prop, the over-flown content is hidden.\"}</Text><Text>{\"0\"}</Text><Text>{\"1\"}</Text><Text>{\"2\"}</Text><Text>{\"3\"}</Text><Text>{\"4\"}</Text><Text>{\"5\"}</Text><Text>{\"6\"}</Text><Text>{\"7\"}</Text><Text>{\"8\"}</Text><Text>{\"9\"}</Text><Text>{\"10\"}</Text><Text>{\"11\"}</Text><Text>{\"12\"}</Text><Text>{\"13\"}</Text><Text>{\"14\"}</Text><Text>{\"15\"}</Text><Text>{\"16\"}</Text><Text>{\"17\"}</Text><Text>{\"18\"}</Text><Text>{\"19\"}</Text><Text>{\"20\"}</Text><Text>{\"21\"}</Text><Text>{\"22\"}</Text><Text>{\"23\"}</Text><Text>{\"24\"}</Text><Text>{\"25\"}</Text><Text>{\"26\"}</Text><Text>{\"27\"}</Text><Text>{\"28\"}</Text><Text>{\"29\"}</Text>\n\t\t</View>;\n\tconst blueView = <View style={{ backgroundColor: 'blue', height: '100%', width: '100%', }}><Text>{\"I am the blue view\"}</Text></View>;\n\tconst layouts = [\n\t\t{\n\t\t\tvalidAfterWHRatio: 0,\n\t\t\tvalidBeforeWHRatio: 0.9,\n\t\t\tviews: [\n\t\t\t\t{ top: 0, bottom: 0.5, left: 0, right: 1, children: redView },\n\t\t\t\t{ top: 0.75, bottom: 1, left: 0, right: 1, children: blueView },\n\t\t\t\t{ top: 0.5, bottom: 0.75, left: 0, right: 1, children: greenView },\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tvalidAfterWHRatio: 1 / 0.62,\n\t\t\tvalidBeforeWHRatio: 999, // infinity\n\t\t\tviews: [\n\t\t\t\t{ top: 0, bottom: 1, left: 0, right: 0.5, children: redView },\n\t\t\t\t{ top: 0.5, bottom: 1, left: 0.5, right: 1, children: blueView },\n\t\t\t\t{ top: 0, bottom: 0.5, left: 0.5, right: 1, children: greenView },\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tdefaultFlag: true,\n\t\t\tviews: [\n\t\t\t\t{ top: 0.16, bottom: 0.84, left: 0.16, right: 0.5, children: redView },\n\t\t\t\t{ top: 0.50, bottom: 0.84, left: 0.5, right: 0.84, children: blueView },\n\t\t\t\t{ top: 0.16, bottom: 0.50, left: 0.5, right: 0.84, children: greenView },\n\t\t\t]\n\t\t},\n\t];\n\n\tuseEffect(() => {\n\t\tlet nextRerender = rerender + 1;\n\t\tsetRerender(nextRerender);\n\t}, []); // when we want to re-render\n\n\treturn <ReactNativeAnimatedLayout\n\t\tlayouts={layouts}\n\t\trerender={rerender}\n\t/>;\n}\n"],"sourceRoot":""}